                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Thu Apr 01 20:11:08 2021
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc174960
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _cls
                             13 	.globl _gets
                             14 	.globl _printf
                             15 	.globl _user_input
                             16 	.globl _result
                             17 	.globl _main
                             18 	.globl _cls
                             19 ;--------------------------------------------------------
                             20 ; Externals used
                             21 ;--------------------------------------------------------
                             22 	.globl __io_out
                             23 	.globl __io_in
                             24 	.globl __io_status
                             25 	.globl _sys_time
                             26 	.globl __cpu
                             27 ;--------------------------------------------------------
                             28 ; special function registers
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; special function bits 
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area _DATA
   0000                      37 _result::
   0000                      38 	.ds 1
   0001                      39 _user_input::
   0001                      40 	.ds 25
                             41 ;--------------------------------------------------------
                             42 ; overlayable items in internal ram 
                             43 ;--------------------------------------------------------
                             44 	.area _OVERLAY
                             45 ;--------------------------------------------------------
                             46 ; indirectly addressable internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area _ISEG
                             49 ;--------------------------------------------------------
                             50 ; bit data
                             51 ;--------------------------------------------------------
                             52 	.area _BSEG
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area _XSEG
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area _GSINIT
                             61 	.area _GSFINAL
                             62 	.area _GSINIT
                             63 ;--------------------------------------------------------
                             64 ; Home
                             65 ;--------------------------------------------------------
                             66 	.area _HOME
                             67 	.area _CODE
                             68 ;--------------------------------------------------------
                             69 ; code
                             70 ;--------------------------------------------------------
                             71 	.area _CODE
                             72 ;	NEW.c 22
                             73 ; genLabel
                             74 ; genFunction
                             75 ;	---------------------------------
                             76 ; Function cls
                             77 ; ---------------------------------
   0000                      78 ___cls_start:
   0000                      79 _cls:
   0000 C5                   80 	push	bc
   0001 E8 FB                81 	lda	sp,-5(sp)
                             82 ;	NEW.c 26
                             83 ; genAssign
                             84 ; AOP_STK for _cls_y_1_1
   0003 F8 03                85 	lda	hl,3(sp)
   0005 36 00                86 	ld	(hl),#0x00
   0007 23                   87 	inc	hl
   0008 36 00                88 	ld	(hl),#0x00
                             89 ; genLabel
   000A                      90 00105$:
                             91 ; genCmpLt
                             92 ; AOP_STK for _cls_y_1_1
   000A F8 03                93 	lda	hl,3(sp)
   000C 5E                   94 	ld	e,(hl)
   000D 23                   95 	inc	hl
   000E 7E                   96 	ld	a,(hl)
   000F EE 80                97 	xor	a,#0x80
   0011 57                   98 	ld	d,a
   0012 21 EC 7F             99 	ld	hl,#0x7FEC
   0015 19                  100 	add	hl,de
   0016 DA 61 00            101 	jp	c,00108$
                            102 ;	NEW.c 27
                            103 ; genAssign
   0019 01 00 00            104 	ld	bc,#0x0000
                            105 ; genLabel
   001C                     106 00101$:
                            107 ; genCmpLt
                            108 ; AOP_STK for _cls_sloc0_1_0
   001C 59                  109 	ld	e,c
   001D 78                  110 	ld	a,b
   001E EE 80               111 	xor	a,#0x80
   0020 57                  112 	ld	d,a
   0021 21 E2 7F            113 	ld	hl,#0x7FE2
   0024 19                  114 	add	hl,de
   0025 3E 00               115 	ld	a,#0x00
   0027 17                  116 	rla
   0028 EE 01               117 	xor	a,#0x01
   002A F8 02               118 	lda	hl,2(sp)
   002C 77                  119 	ld	(hl),a
                            120 ; genIfx
                            121 ; AOP_STK for _cls_sloc0_1_0
                            122 ; Removed redundent or a,a
   002D AF                  123 	xor	a,a
   002E B6                  124 	or	a,(hl)
   002F CA 57 00            125 	jp	z,00107$
                            126 ;	NEW.c 29
                            127 ; genIpush
                            128 ; AOP_STK for _cls_y_1_1
   0032 23                  129 	inc	hl
   0033 2A                  130 	ld	a,(hl+)
   0034 66                  131 	ld	h,(hl)
   0035 6F                  132 	ld	l,a
   0036 E5                  133 	push	hl
                            134 ; genIpush
   0037 C5                  135 	push	bc
                            136 ; genCall
   0038 CD 00 00            137 	call	gotoxy
   003B E8 04               138 	lda	sp,4(sp)
                            139 ;	NEW.c 30
                            140 ; genIpush
   003D 3E 20               141 	ld	a,#0x20
   003F F5                  142 	push	af
   0040 33                  143 	inc	sp
                            144 ; genCall
   0041 CD 00 00            145 	call	setchar
   0044 E8 01               146 	lda	sp,1(sp)
                            147 ;	NEW.c 27
                            148 ; genPlus
                            149 ; AOP_STK for _cls_sloc1_1_0
                            150 ; genPlusIncr
                            151 ;	genPlusIncr failed
   0046 21 01 00            152 	ld	hl,#0x0001
   0049 09                  153 	add	hl,bc
   004A 7D                  154 	ld	a,l
   004B 54                  155 	ld	d,h
   004C F8 00               156 	lda	hl,0(sp)
   004E 22                  157 	ld	(hl+),a
   004F 72                  158 	ld	(hl),d
                            159 ; genAssign
                            160 ; AOP_STK for _cls_sloc1_1_0
   0050 2B                  161 	dec	hl
   0051 4E                  162 	ld	c,(hl)
   0052 23                  163 	inc	hl
   0053 46                  164 	ld	b,(hl)
                            165 ; genGoto
   0054 C3 1C 00            166 	jp	00101$
                            167 ; genLabel
   0057                     168 00107$:
                            169 ;	NEW.c 26
                            170 ; genPlus
                            171 ; AOP_STK for _cls_y_1_1
                            172 ; genPlusIncr
   0057 F8 03               173 	lda	hl,3(sp)
   0059 34                  174 	inc	(hl)
   005A 20 02               175 	jr	nz,00115$
   005C 23                  176 	inc	hl
   005D 34                  177 	inc	(hl)
   005E                     178 00115$:
                            179 ; genGoto
   005E C3 0A 00            180 	jp	00105$
                            181 ; genLabel
   0061                     182 00108$:
                            183 ;	NEW.c 32
                            184 ; genIpush
   0061 3E 00               185 	ld	a,#0x00
   0063 F5                  186 	push	af
   0064 33                  187 	inc	sp
                            188 ; genIpush
   0065 3E 00               189 	ld	a,#0x00
   0067 F5                  190 	push	af
   0068 33                  191 	inc	sp
                            192 ; genCall
   0069 CD 00 00            193 	call	gotoxy
   006C E8 02               194 	lda	sp,2(sp)
                            195 ; genLabel
   006E                     196 00109$:
                            197 ; genEndFunction
   006E E8 05               198 	lda	sp,5(sp)
   0070 C1                  199 	pop	bc
   0071 C9                  200 	ret
   0072                     201 ___cls_end:
                            202 ;	NEW.c 36
                            203 ; genLabel
                            204 ; genFunction
                            205 ;	---------------------------------
                            206 ; Function main
                            207 ; ---------------------------------
   0072                     208 ___main_start:
   0072                     209 _main:
   0072 C5                  210 	push	bc
   0073 E8 E7               211 	lda	sp,-25(sp)
                            212 ;	NEW.c 40
                            213 ; genLabel
   0075                     214 00104$:
                            215 ;	NEW.c 42
                            216 ; genAddrOf
   0075 F8 00               217 	lda	hl,0(sp)
   0077 54                  218 	ld	d,h
   0078 5D                  219 	ld	e,l
   0079 4B                  220 	ld	c,e
   007A 42                  221 	ld	b,d
                            222 ; genAssign (pointer)
   007B 3E 64               223 	ld	a,#0x64
   007D 02                  224 	ld	(bc),a
                            225 ; genPlus
                            226 ; genPlusIncr
   007E 59                  227 	ld	e,c
   007F 50                  228 	ld	d,b
   0080 13                  229 	inc	de
                            230 ; genAssign (pointer)
   0081 3E 6F               231 	ld	a,#0x6F
   0083 12                  232 	ld	(de),a
                            233 ; genPlus
                            234 ; genPlusIncr
   0084 59                  235 	ld	e,c
   0085 50                  236 	ld	d,b
   0086 13                  237 	inc	de
   0087 13                  238 	inc	de
                            239 ; genAssign (pointer)
   0088 3E 64               240 	ld	a,#0x64
   008A 12                  241 	ld	(de),a
                            242 ; genPlus
                            243 ; genPlusIncr
                            244 ;	genPlusIncr failed
   008B 79                  245 	ld	a,c
   008C C6 03               246 	add	a,#0x03
   008E 5F                  247 	ld	e,a
   008F 78                  248 	ld	a,b
   0090 CE 00               249 	adc	a,#0x00
   0092 57                  250 	ld	d,a
                            251 ; genAssign (pointer)
   0093 3E 00               252 	ld	a,#0x00
   0095 12                  253 	ld	(de),a
                            254 ;	NEW.c 44
                            255 ; genIpush
   0096 21 FD 00            256 	ld	hl,#__str_1 + 0
   0099 E5                  257 	push	hl
                            258 ; genCall
   009A CD 00 00            259 	call	_printf
   009D E8 02               260 	lda	sp,2(sp)
                            261 ;	NEW.c 45
                            262 ; genIpush
   009F 21 01 00            263 	ld	hl,#_user_input + 0
   00A2 E5                  264 	push	hl
                            265 ; genCall
   00A3 CD 00 00            266 	call	_gets
   00A6 E8 02               267 	lda	sp,2(sp)
                            268 ;	NEW.c 46
                            269 ; genIpush
   00A8 21 0A 01            270 	ld	hl,#__str_2 + 0
   00AB E5                  271 	push	hl
                            272 ; genCall
   00AC CD 00 00            273 	call	_printf
   00AF E8 02               274 	lda	sp,2(sp)
                            275 ;	NEW.c 50
                            276 ; genIpush
   00B1 C5                  277 	push	bc
                            278 ; genIpush
   00B2 21 01 00            279 	ld	hl,#_user_input + 0
   00B5 E5                  280 	push	hl
                            281 ; genCall
   00B6 CD 00 00            282 	call	strcmp
   00B9 42                  283 	ld	b,d
   00BA 4B                  284 	ld	c,e
   00BB E8 04               285 	lda	sp,4(sp)
                            286 ; genCast
                            287 ; AOP_HL for _result
   00BD 21 00 00            288 	ld	hl,#_result + 0
   00C0 71                  289 	ld	(hl),c
                            290 ;	NEW.c 51
                            291 ; genCmpEq
                            292 ; AOP_HL for _result
   00C1 7E                  293 	ld	a,(hl)
   00C2 B7                  294 	or	a,a
   00C3 C2 C8 00            295 	jp	nz,00110$
   00C6 18 03               296 	jr	00111$
   00C8                     297 00110$:
   00C8 C3 D4 00            298 	jp	00102$
   00CB                     299 00111$:
                            300 ;	NEW.c 52
                            301 ; genIpush
   00CB 21 0C 01            302 	ld	hl,#__str_3 + 0
   00CE E5                  303 	push	hl
                            304 ; genCall
   00CF CD 00 00            305 	call	_printf
   00D2 E8 02               306 	lda	sp,2(sp)
                            307 ; genLabel
   00D4                     308 00102$:
                            309 ;	NEW.c 58
                            310 ; genIpush
   00D4 21 01 00            311 	ld	hl,#_user_input + 0
   00D7 E5                  312 	push	hl
                            313 ; genCall
   00D8 CD 00 00            314 	call	_printf
   00DB E8 02               315 	lda	sp,2(sp)
                            316 ;	NEW.c 59
                            317 ; genCast
                            318 ; AOP_HL for _result
   00DD 21 00 00            319 	ld	hl,#_result + 0
   00E0 4E                  320 	ld	c,(hl)
   00E1 06 00               321 	ld	b,#0x00
                            322 ; genIpush
   00E3 C5                  323 	push	bc
                            324 ; genCall
   00E4 CD 00 00            325 	call	_printf
   00E7 E8 02               326 	lda	sp,2(sp)
                            327 ;	NEW.c 60
                            328 ; genIpush
   00E9 21 16 01            329 	ld	hl,#__str_4 + 0
   00EC E5                  330 	push	hl
                            331 ; genCall
   00ED CD 00 00            332 	call	_printf
   00F0 E8 02               333 	lda	sp,2(sp)
                            334 ; genGoto
   00F2 C3 75 00            335 	jp	00104$
                            336 ; genLabel
   00F5                     337 00106$:
                            338 ; genEndFunction
   00F5 E8 19               339 	lda	sp,25(sp)
   00F7 C1                  340 	pop	bc
   00F8 C9                  341 	ret
   00F9                     342 ___main_end:
   00F9                     343 __str_0:
   00F9 64 6F 64            344 	.ascii "dod"
   00FC 00                  345 	.db 0x00
   00FD                     346 __str_1:
   00FD 52 6F 6F 74 40 4F   347 	.ascii "Root@Onions>"
        6E 69 6F 6E 73 3E
   0109 00                  348 	.db 0x00
   010A                     349 __str_2:
   010A 0A                  350 	.db 0x0A
   010B 00                  351 	.db 0x00
   010C                     352 __str_3:
   010C 49 74 20 77 6F 72   353 	.ascii "It worked"
        6B 65 64
   0115 00                  354 	.db 0x00
   0116                     355 __str_4:
   0116 0A                  356 	.db 0x0A
   0117 00                  357 	.db 0x00
                            358 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___cls_end                         0072 R
  0 ___cls_start                       0000 R
  0 ___main_end                        00F9 R
  0 ___main_start                      0072 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            00F9 R
  0 __str_1                            00FD R
  0 __str_2                            010A R
  0 __str_3                            010C R
  0 __str_4                            0116 R
  0 _cls                               0000 GR
    _gets                              **** GX
  0 _main                              0072 GR
    _printf                            **** GX
  1 _result                            0000 GR
    _sys_time                          **** GX
  1 _user_input                        0001 GR
    gotoxy                             **** GX
    setchar                            **** GX
    strcmp                             **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  118   flags 0
   1 _DATA                              size   1A   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
